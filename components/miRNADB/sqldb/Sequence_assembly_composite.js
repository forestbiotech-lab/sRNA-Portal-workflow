/**
   * Created by Bruno Costa 2023-03-08
   * Generated by Utilities/createTable.py
   */
  'use strict';

  module.exports = function(sequelize, DataTypes) {
    const Sequence_assembly_composite = sequelize.define('Sequence_assembly_composite', {
      assembly_key: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: true,
        allowNull: false
      },
      assembly_value: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: true,
        allowNull: false
      },
      organism: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      external_id_key: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      external_id_value: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      project_key: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      project_value: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      genome_build: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      assembly_date: {
        type: DataTypes.DATE,
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      assembly_level: {
        type: DataTypes.ENUM('genome','chromosome', 'scaffold','contig'),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      representation: {
        type: DataTypes.ENUM('full','partial'),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      composite: {
        type: DataTypes.STRING,
        autoIncrement: false,
        primaryKey: true,
        allowNull: false
      },
    }, {
      tableName: 'Sequence_assembly_composite',
      timestamps: false,
      underscored: false,

      classMethods: {
        associate: function associate(models) {
              Sequence_assembly_composite.belongsTo(models.Feature_composite, {
                foreignKey: 'composite',              //on Sequence_assembly_composite
                targetKey: 'composite',  //foreign key
              });
              Sequence_assembly_composite.belongsTo(models.Organism, {
                foreignKey: 'organism',              //on Sequence_assembly_composite
                targetKey: 'ncbi_taxon_id',  //foreign key
              });
        }
      },
    });

    return Sequence_assembly_composite;
  };