/**
   * Created by Bruno Costa 2021-07-07
   * Generated by Utilities/createTable.py
   */
  'use strict';

  module.exports = function(sequelize, DataTypes) {
    const Feature = sequelize.define('Feature', {
      id: { 
        type: DataTypes.INTEGER,
        autoIncrement: true,
        primaryKey: true,
        allowNull: false
      },
      genome_id: { 
        type: DataTypes.INTEGER,
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      name: { 
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      source: { 
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      type: { 
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      start: { 
        type: DataTypes.INTEGER,
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      end: { 
        type: DataTypes.INTEGER,
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      score: { 
        type: DataTypes.FLOAT,
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      strand: { 
        type: DataTypes.STRING(1),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      phase: { 
        type: DataTypes.INTEGER,
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      attr_id: { 
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      sequence_assembly_key: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      sequence_assembly_value: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
    }, {
      tableName: 'Feature',
      timestamps: false,
      underscored: false,

      classMethods: {
        associate: function associate(models) {    
          /*Feature.belongsTo(models.Sequence_assembly, {
            foreignKey: 'genome_id',              //on Feature
            targetKey: 'assembly_value',  //foreign key
          });*/
          Feature.belongsTo(models.Feature_attribute_list, {
            foreignKey: 'id',              //on Feature
            targetKey: 'feature_id',  //foreign key  
          });
          Feature.belongsTo(models.Gene, {
            foreignKey: 'id',              //on Feature
            targetKey: 'feature_id',  //foreign key  
          });
          Feature.belongsTo(models.Pre_has_Feature, {
            foreignKey: 'id',              //on Feature
            targetKey: 'feature_id',  //foreign key  
          });
          Feature.belongsTo(models.Transcript, {
            foreignKey: 'id',              //on Feature
            targetKey: 'feature_id',  //foreign key  
          }); 
        }
      },
    });

    return Feature;
  };