/**
 * Created by Bruno Costa 2023-03-08
 * Generated by Utilities/createTable.py
 */
'use strict';

module.exports = function(sequelize, DataTypes) {
  const Feature_composite = sequelize.define('Feature_composite', {
    end: {
      type: DataTypes.INTEGER,
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    sequence_assembly_key: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    sequence_assembly_value: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    score: {
      type: DataTypes.FLOAT,
      autoIncrement: false,
      primaryKey: false,
      allowNull: true
    },
    strand: {
      type: DataTypes.STRING(1),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    phase: {
      type: DataTypes.INTEGER,
      autoIncrement: false,
      primaryKey: false,
      allowNull: true
    },
    attr_id: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: true
    },
    id: {
      type: DataTypes.INTEGER,
      autoIncrement: false,
      primaryKey: true,
      allowNull: false
    },
    name: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    source: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    type: {
      type: DataTypes.STRING(254),
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    start: {
      type: DataTypes.INTEGER,
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
    composite: {
      type: DataTypes.STRING,
      autoIncrement: false,
      primaryKey: false,
      allowNull: false
    },
  }, {
    tableName: 'Feature_composite',
    timestamps: false,
    underscored: false,

    classMethods: {
      associate: function associate(models) {
        Feature_composite.belongsTo(models.Sequence_assembly_composite, {
          foreignKey: 'composite',              //on Feature_composite
          targetKey: 'composite',  //foreign key
        });
        Feature_composite.belongsTo(models.Feature_attribute_list, {
          foreignKey: 'id',              //on Feature
          targetKey: 'feature_id',  //foreign key
        });
        Feature_composite.belongsTo(models.Gene, {
          foreignKey: 'id',              //on Feature
          targetKey: 'feature_id',  //foreign key
        });
        /*Feature_composite.belongsTo(models.Mature_has_feature, {
          foreignKey: 'id',              //on Feature
          targetKey: 'feature_id',  //foreign key
        });*/
        Feature_composite.belongsTo(models.Pre_has_Feature, {
          foreignKey: 'id',              //on Feature
          targetKey: 'feature_id',  //foreign key
        });
        Feature_composite.belongsTo(models.Transcript, {
          foreignKey: 'id',              //on Feature
          targetKey: 'feature_id',  //foreign key
        });
      }
    },
  });

  return Feature_composite;
};