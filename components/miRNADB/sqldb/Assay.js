/**
   * Created by Bruno Costa 2023-03-23
   * Generated by Utilities/createTable.py
   */
  'use strict';

  module.exports = function(sequelize, DataTypes) {
    const Assay = sequelize.define('Assay', {
      id: {
        type: DataTypes.INTEGER(11),
        autoIncrement: true,
        primaryKey: true,
        allowNull: true
      },
      name: {
        type: DataTypes.STRING(255),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      study: {
        type: DataTypes.INTEGER(11),
        autoIncrement: false,
        primaryKey: false,
        allowNull: false
      },
      sample: {
        type: DataTypes.INTEGER(11),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      operation: {
        type: DataTypes.TEXT,
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      type: {
        type: DataTypes.STRING(254),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
      output: {
        type: DataTypes.INTEGER(11),
        autoIncrement: false,
        primaryKey: false,
        allowNull: true
      },
    }, {
      tableName: 'Assay',
      timestamps: false,
      underscored: false,

      classMethods: {
        associate: function associate(models) {    
              Assay.belongsTo(models.Study, {
                foreignKey: 'study',              //on Assay
                targetKey: 'id',  //foreign key
              });
              Assay.belongsTo(models.Sample, {
                foreignKey: 'sample',              //on Assay
                targetKey: 'id',  //foreign key
              });
              Assay.belongsTo(models.Assay_Modality, {
                foreignKey: 'id',              //on Assay
                targetKey: 'assay_id',  //foreign key
              });
              Assay.belongsTo(models.Assay_data, {
                foreignKey: 'id',              //on Assay
                targetKey: 'assay',  //foreign key
              });

        }
      },
    });

    return Assay;
  };